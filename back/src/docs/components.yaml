components:
  schemas:
    UserRegister:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        password:
          type: string
          format: password
          example: Pa$$w0rd!

    UserResponse:
      type: object
      properties:
        id:
          type: string
          example: "60d0fe4f5311236168a109ca"
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john.doe@example.com

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "User registered successfully."
        data:
          $ref: '#/components/schemas/UserResponse'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "An error occurred."

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Invalid data format. See details below..."
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                example: "password"
              message:
                type: string
                example: "Password must be at least 4 characters long."
              value:
                type: string
                example: "123"
